{"version":3,"sources":["components/Navbar/index.js","components/SearchBar/index.js","components/Results/index.js","utils/booksAPI.js","components/Jumbotron/index.js","pages/Search.js","components/SavedBooks/index.js","pages/Saved.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","SearchBar","props","placeholder","onChange","handleSearchChange","onClick","searchBooks","Results","books","data","undefined","map","book","i","volumeInfo","imageLinks","src","thumbnail","alt","title","authors","join","description","target","rel","infoLink","saveBook","modalClass","role","data-dismiss","text","width","height","viewBox","fill","xmlns","fillRule","d","modalClose","API","getBooks","axios","get","getApiBooks","addBook","post","deleteBook","delete","findBook","Jumbotron","Search","useState","searchState","setSearchState","setBooks","setModalClass","setText","ids","setIds","useEffect","a","holder","length","APIbooks","then","res","items","newBooks","push","console","log","e","value","image","includes","author","link","err","SavedBooks","deleteBooks","_id","Saved","Fragment","response","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0afe4e93.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./style.css\";\n\n// Navbar component for each page\nfunction Navbar() {\n    return (\n        <header>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-secondary\">\n                <h1 className=\"p-2 mb-2 ml-3\">\n                    <a className=\"navbar-brand pl-3 px-1\" href=\"/\">Google Books\n                    </a>\n                </h1>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav ml-md-auto\">\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/search\" className=\"nav-link\">Search</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink to=\"/saved\" className=\"nav-link\">Saved</NavLink>\n                        </li>\n                    </ul>\n                    <div className=\"px-3\"></div>\n                </div>\n            </nav>\n        </header>\n    );\n};\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\n// Searchbar component for our search page where the user can type in the input field\nexport function SearchBar(props) {\n  return (\n    <div className=\"container mb-5\">\n      <div className=\"card\">\n        <input type=\"text\" className=\"bar form-control text-center\" placeholder=\"What are you looking for?\" onChange={props.handleSearchChange} />\n      </div>\n      <button className=\"btn btn-primary mt-4\" id=\"searchBtn\" onClick={props.searchBooks}>Search Books</button>\n    </div>\n  );\n};\n\nexport default SearchBar;","import React from \"react\";\nimport \"./style.css\";\n\n// Results components for the search results of the user\nfunction Results(props) {\n\n  const books = props.data\n  // console.log(\"books search: \", books);\n\n  return (\n    <>\n    {/* mapping through each book data and then displaying the info from the API and if there are no results, display the mo matching results container */}\n      {books !== undefined ? (\n        books.map((book, i) => {\n          // console.log(book.volumeInfo.authors.length)\n\n          return (\n            <div key={book.id + i} className=\"container\">\n              <div className=\"card result\">\n                <div className=\"row mb-4 mt-3\">\n                  <div className=\"col-lg-4 bookImg\">\n                    {/* if there are no images of the books, set a defauly logo */}\n                    {book.volumeInfo.imageLinks ? (\n                      <img\n                        className=\"img-fluid\"\n                        src={book.volumeInfo.imageLinks.thumbnail}\n                        alt={book.volumeInfo.title}\n                      />\n                    ) : (\n                      <img\n                        src=\"./googlebookslogo.png\"\n                        alt=\"title\"\n                        className=\"img-fluid logo2\"\n                      />\n                    )}\n                  </div>\n                  <div className=\"col-lg-8 mainContent\">\n                    <h2>{book.volumeInfo.title}</h2>\n                    {/* if there are more than x number of authors, join with an \"&\" */}\n                    <p>\n                      {book.volumeInfo.authors !== undefined\n                        ? book.volumeInfo.authors.join(\" & \")\n                        : book.volumeInfo.authors}\n                    </p>\n                    <p className=\"mr-4\">{book.volumeInfo.description}</p>\n                    <a\n                      className=\"btn btn-primary\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      href={book.volumeInfo.infoLink}\n                    >\n                      View\n                    </a>\n                    <button\n                      className=\"ml-3 btn btn-primary\"\n                      onClick={() => {\n                        props.saveBook(book);\n                      }}\n                    >\n                      Save Book\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div className=\"container mb-5\">\n          <div className=\"card result\">\n            <h2 className=\"p-5\">\n              Sorry, we couldn't find any matching results.\n            </h2>\n          </div>\n        </div>\n      )}\n      {/* modal start */}\n      <div className={props.modalClass} id=\"contactModal\" role=\"dialog\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button>\n            </div>\n            <div className=\"modal-body mt-2\">\n              <p>{props.text}</p>\n              <svg\n                width=\"2em\"\n                height=\"2em\"\n                viewBox=\"0 0 16 16\"\n                className=\"bi bi-archive\"\n                fill=\"currentColor\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M0 2a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1v7.5a2.5 2.5 0 0 1-2.5 2.5h-9A2.5 2.5 0 0 1 1 12.5V5a1 1 0 0 1-1-1V2zm2 3v7.5A1.5 1.5 0 0 0 3.5 14h9a1.5 1.5 0 0 0 1.5-1.5V5H2zm13-3H1v2h14V2zM5 7.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5z\"\n                />\n              </svg>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                onClick={() => props.modalClose()}\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Results;\n","import axios from 'axios';\n\nconst API = {\n    // axios call to grab the books from the google books API and the search input of the user\n    getBooks: function(book) {\n        return axios.get('https://www.googleapis.com/books/v1/volumes?q=' + book)\n    },\n    // grab the books from the database that was saved by the user\n    getApiBooks: function() {\n        return axios.get(\"/api/books\");\n    },\n    // add a book to the database when the user clicks save book\n    addBook: function(data) {\n        return axios.post(\"/api/books\", data);\n    },\n    // delete the book by id when the user decides to remove from the saved page\n    deleteBook: function(id) {\n        return axios.delete(\"/api/books/\" + id);\n    },\n    // find a book by id\n    findBook: function(id) {\n        return axios.get(\"/api/search\");\n    }\n};\n\nexport default API;\n\n","import React from \"react\";\nimport \"./style.css\"\n\n// Jumbotron component for each page\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid bg-dark text-white\">\n      <div className=\"container\">\n        <h1  className=\"display-4 text-center mt-5 mb-3\">Google Books Search</h1>\n        <img className=\"logo\" src=\"./googlebookslogo.png\" alt=\"logo\"/>\n        <p className=\"lead text-center mt-3\">Search for and Save Books of Interest</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Jumbotron;","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"../components/Navbar\"\nimport SearchBar from \"../components/SearchBar\"\nimport Results from \"../components/Results\"\nimport APIbooks from '../utils/booksAPI'\nimport Jumbotron from \"../components/Jumbotron\";\nimport \"./style.css\";\n\n// Search page that allows the user to search for books\nfunction Search() {\n\n    // variables for the book the user is searching for\n    const [searchState, setSearchState] = useState(\"\");\n    const [books, setBooks] = useState([]);\n\n    // variables for the modal that will pop up when the user clicks on the save book button\n    const [modalClass, setModalClass] = useState(\"modal hideModal\");\n    const [text, setText] = useState(\"Saved!\");\n    // saved book ids\n    const [ids, setIds] = useState([]);\n\n    // for the modal display to hide or show\n    useEffect(() => {\n    }, [modalClass]);\n\n    function modalClose() {\n        setModalClass(\"modal hideModal\");\n    };\n\n    // function for the user's input that tracks every letter typed in by the user\n    const handleSearchChange = (e) => {\n        const { value } = e.target\n        setSearchState(value)\n        // console.log(searchState)\n    };\n\n    // function that is grabbing the information from the google books API\n    const searchBooks = async () => {\n        let holder = [];\n        holder.length = 0;\n        let newBooks = await APIbooks.getBooks(searchState)\n            .then((res) => {\n                return res.data.items;\n            });\n        setBooks(newBooks);\n        // grab saved books whenever a new search occurs\n        APIbooks.getApiBooks()\n            .then(res => {\n                for (let i = 0; i < res.data.length; i++) {\n                    holder.push(res.data[i].id);\n                }\n                console.log(\"savebook response: \", res)\n            })\n        console.log(\"holder: \", holder);\n        setIds(holder);\n    };\n\n    // function that allows books to be saved qne displaying the modal\n    const saveBook = (book) => {\n        // console.log(\"savebook: \", book);\n        var image;\n        if (book.volumeInfo.imageLinks === undefined) {\n            image = \"./googlebookslogo.png\"\n        } else {\n            image = book.volumeInfo.imageLinks.thumbnail\n        };\n\n        // console.log(\"book id: \", book.id);\n        if (!ids.includes(book.id)) {\n            setIds([...ids, book.id]);\n            setModalClass(\"modal showModal\");\n            setText(book.volumeInfo.title + \" was saved!\");\n        } else {\n            setModalClass(\"modal showModal\");\n            setText(book.volumeInfo.title + \" is already saved!\");\n        };\n\n        // setting an object with the data we grabbed from the axios call and passing in the data to be saved into the database\n        const data = {\n            title: book.volumeInfo.title,\n            author: book.volumeInfo.authors,\n            description: book.volumeInfo.description,\n            image: image,\n            link: book.volumeInfo.infoLink,\n            id: book.id\n        };\n\n        APIbooks.addBook(data).then(res => {\n            console.log(\"saved\", res)\n\n\n        }).then(err => {\n            console.log(\"error\", err);\n\n        });\n    };\n\n    return (\n        <div className=\"mb-5\">\n            <Navbar />\n            <Jumbotron />\n            <SearchBar\n                handleSearchChange={handleSearchChange}\n                searchBooks={searchBooks} />\n            <Results\n                data={books}\n                saveBook={saveBook}\n                modalClose={modalClose}\n                text={text}\n                modalClass={modalClass}\n            />\n        </div>\n    );\n};\n\nexport default Search;","import React from \"react\";\nimport \"./style.css\";\n\n// SavedBooks component is the main container of displaying the books the user saved\nfunction SavedBooks({ books, deleteBooks }) {\n  return (\n    // mapping through each book from the database and displaying each book\"\n    books.map(book => {\n      return (\n        <div key={book.id} className=\"container\">\n          <div className=\"card\">\n            <div className=\"row mb-4 mt-3\">\n              <div className=\"col-lg-4 bookImg\">\n                {book.image ? <img src={book.image} alt=\"title\" className=\"img-fluid\" />\n                  : <img src=\"https://via.placeholder.com/140x100\" alt=\"title\" className=\"img-fluid\" />}\n              </div>\n              <div className=\"col-lg-8 savedContent\">\n                <h2>{book.title}</h2>\n                <p>{book.author.join(' & ')}</p>\n                <p className=\"mr-4\">{book.description}</p>\n                <a className=\"viewBtn btn btn-primary\" target=\"_blank\" rel=\"noreferrer\" href={book.link}>View</a>\n                <button onClick={() => deleteBooks(book._id)} className=\" deleteBtn btn ml-3\">Remove</button> \n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    })\n  );\n};\n\nexport default SavedBooks;","import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport APIbooks from \"../utils/booksAPI\";\nimport SavedBooks from \"../components/SavedBooks\";\n\n// Saved page displaying the books that are in the database\nfunction Saved() {\n    const [books, setBooks] = useState([]);\n\n    // delete books by id\n    const deleteBooks = (id) => {\n        // console.log(books);\n        // console.log(\"working\");\n        // console.log(id);\n        APIbooks.deleteBook(id)\n            .then((res) => {\n                // console.log(res);\n                // then update books\n                APIbooks.getApiBooks()\n                    .then(response => {\n                        // console.log(\"delete grab response: \", response);\n                        setBooks(response.data)\n                    })\n            })\n\n    };\n\n    // grabbing the books from the database on initial render\n    useEffect(() => {\n        APIbooks.getApiBooks()\n            .then(res => setBooks(res.data))\n        // console.log(books)\n    }, []);\n\n    // re-render page when books is updated\n    useEffect(() => {\n    }, [books]);\n\n    return (\n        <div className=\"mb-5\">\n            <React.Fragment>\n                <Navbar />\n                <Jumbotron />\n                <SavedBooks\n                    books={books}\n                    deleteBooks={deleteBooks} />\n            </React.Fragment>\n        </div>\n    );\n};\n\nexport default Saved;","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\n\n// setting up the routes to the different pages in the application\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact path=\"/saved\" component={Saved} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}